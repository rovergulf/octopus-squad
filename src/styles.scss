/*
 * those contents are copied from
 * https://github.com/rovergulf/ngx-slice-kit/tree/main/libs/ngx-slice-kit/src/lib/core/styles
 */

/* --- DEFAULTS --- */
* {
    margin: 0;
    padding: 0;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-backface-visibility: hidden;
}

input, button, textarea {
    outline: none;
    border: none;
}

input.hidden {
    position: absolute;
    z-index: -10;
    top: -10000 px;
    left: -10000 px;
    height: 1px;
    width: 1px;
    opacity: 0;
}

ul, ol {
    list-style: none;
}

b, i, strong {
    font-size: inherit;
    color: inherit;
}

[hidden], .hide {
    display: none !important;
}

[disabled] {
    pointer-events: none;
    opacity: 0.5;
}

a, a:hover, a:visited, a:active, a:focus {
    text-decoration: none;
    outline: none;
    color: inherit;
}

@each $flex-direction in row, row-reverse, column, column-reverse {
    .flex-#{$flex-direction} {
        position: relative;
        display: flex;
        flex-direction: $flex-direction;
    }
}

.flex-row, .flex-column {
    -webkit-box-direction: normal;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-nowrap {
    flex-wrap: nowrap;
}

/* prefix(layout) - justify-content - align-items/content */

.layout-center-center {
    align-content: center;
    align-items: center;
    justify-content: center
}

.layout-center-start {
    align-content: flex-start;
    align-items: flex-start;
    justify-content: center;
}

.layout-center-end {
    align-content: flex-end;
    align-items: flex-end;
    justify-content: center;
}

.layout-center-stretch {
    align-content: stretch;
    align-items: stretch;
    justify-content: center;
}

.layout-space-around-center {
    align-content: center;
    align-items: center;
    justify-content: space-around;
}

.layout-space-around-start {
    align-content: flex-start;
    align-items: flex-start;
    justify-content: space-around;
}

.layout-space-around-end {
    align-content: flex-end;
    align-items: flex-end;
    justify-content: space-around;
}

.layout-space-around-stretch {
    align-content: stretch;
    align-items: stretch;
    justify-content: space-around;
}

.layout-space-between-center {
    align-content: center;
    align-items: center;
    justify-content: space-between;
}

.layout-space-between-start {
    align-content: flex-start;
    align-items: flex-start;
    justify-content: space-between;
}

.layout-space-between-end {
    align-content: flex-end;
    align-items: flex-end;
    justify-content: space-between;
}

.layout-space-between-stretch {
    align-content: stretch;
    align-items: stretch;
    justify-content: space-between;
}

.layout-start-center {
    align-content: center;
    align-items: center;
    justify-content: flex-start;
}

.layout-start-start {
    align-content: flex-start;
    align-items: flex-start;
    justify-content: flex-start;
}

.layout-start-end {
    align-content: flex-end;
    align-items: flex-end;
    justify-content: flex-start;
}

.layout-start-stretch {
    align-content: stretch;
    align-items: stretch;
    justify-content: flex-start;
}

.layout-end-center {
    align-content: center;
    align-items: center;
    justify-content: flex-end;
}

.layout-end-start {
    align-content: flex-start;
    align-items: flex-start;
    justify-content: flex-end;
}

.layout-end-end {
    align-content: flex-end;
    align-items: flex-end;
    justify-content: flex-end;
}

.layout-end-stretch {
    align-content: stretch;
    align-items: stretch;
    justify-content: flex-end;
}

/* end of layout */

$flex-grows: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
@each $flex-grow in $flex-grows {
    .flex-grow-#{$flex-grow} {
        flex: $flex-grow;
    }
}

